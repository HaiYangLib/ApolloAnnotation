syntax = "proto2";

package apollo.planning;

message DeciderCreepConfig {
  // stop distance(m) to the creeping stop fence while creeping
  optional double stop_distance = 1 [default = 0.5];  // meter
  optional double speed_limit = 2 [default = 1.0];    // m/s
  // max distance(m) to the to the creeping stop fence
  // to be considered as a valid stop for creep
  optional double max_valid_stop_distance = 3 [default = 0.3];  // meter
  // min boundary t to ignore obstacles while creeping
  optional double min_boundary_t = 4 [default = 6.0];  // second
  // tolerance min_t & min_s to ignore obstacles which are moving
  // on same direction of ADC while creeping
  optional double ignore_max_st_min_t = 5 [default = 0.1];  // second
  optional double ignore_min_st_min_s = 6 [default = 15.0];  // meter
}

message RuleCrosswalkConfig {
  optional bool enabled = 1 [default = true];
  // stop distance(m) to the stop line of the crosswalk
  optional double stop_distance = 2 [default = 1.0];  // meter
}

message RuleStopSignConfig {
  optional bool enabled = 1 [default = true];
  // stop distance(m) to the stop line of the stop sign
  optional double stop_distance = 2 [default = 1.0];  // meter
}

message RuleTrafficLightConfig {
  optional bool enabled = 1 [default = true];
  // stop distance(m) to the stop line of the traffic light
  optional double stop_distance = 2 [default = 1.0];  // meter
  optional double signal_expire_time_sec = 3 [default = 5.0];  // second
}

message DeciderRuleBasedStopConfig {
  optional RuleCrosswalkConfig crosswalk = 1;
  optional RuleStopSignConfig stop_sign = 2;
  optional RuleTrafficLightConfig traffic_light = 3;
}

message SidePassSafetyConfig {
  // min lateral distance(m) for safe obstacle
  optional double min_obstacle_lateral_distance = 1 [default = 1.0];  // meter
  optional double max_overlap_s_range = 2 [default = 5.0]; // meter
  optional double safe_duration_reach_ref_line = 3 [default = 5.0]; //second
}
