// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/qos_profile.proto

#ifndef PROTOBUF_cyber_2fproto_2fqos_5fprofile_2eproto__INCLUDED
#define PROTOBUF_cyber_2fproto_2fqos_5fprofile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace apollo {
namespace cyber {
namespace proto {
class QosProfile;
class QosProfileDefaultTypeInternal;
extern QosProfileDefaultTypeInternal _QosProfile_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo

namespace apollo {
namespace cyber {
namespace proto {

namespace protobuf_cyber_2fproto_2fqos_5fprofile_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cyber_2fproto_2fqos_5fprofile_2eproto

enum QosHistoryPolicy {
  HISTORY_SYSTEM_DEFAULT = 0,
  HISTORY_KEEP_LAST = 1,
  HISTORY_KEEP_ALL = 2
};
bool QosHistoryPolicy_IsValid(int value);
const QosHistoryPolicy QosHistoryPolicy_MIN = HISTORY_SYSTEM_DEFAULT;
const QosHistoryPolicy QosHistoryPolicy_MAX = HISTORY_KEEP_ALL;
const int QosHistoryPolicy_ARRAYSIZE = QosHistoryPolicy_MAX + 1;

const ::google::protobuf::EnumDescriptor* QosHistoryPolicy_descriptor();
inline const ::std::string& QosHistoryPolicy_Name(QosHistoryPolicy value) {
  return ::google::protobuf::internal::NameOfEnum(
    QosHistoryPolicy_descriptor(), value);
}
inline bool QosHistoryPolicy_Parse(
    const ::std::string& name, QosHistoryPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QosHistoryPolicy>(
    QosHistoryPolicy_descriptor(), name, value);
}
enum QosReliabilityPolicy {
  RELIABILITY_SYSTEM_DEFAULT = 0,
  RELIABILITY_RELIABLE = 1,
  RELIABILITY_BEST_EFFORT = 2
};
bool QosReliabilityPolicy_IsValid(int value);
const QosReliabilityPolicy QosReliabilityPolicy_MIN = RELIABILITY_SYSTEM_DEFAULT;
const QosReliabilityPolicy QosReliabilityPolicy_MAX = RELIABILITY_BEST_EFFORT;
const int QosReliabilityPolicy_ARRAYSIZE = QosReliabilityPolicy_MAX + 1;

const ::google::protobuf::EnumDescriptor* QosReliabilityPolicy_descriptor();
inline const ::std::string& QosReliabilityPolicy_Name(QosReliabilityPolicy value) {
  return ::google::protobuf::internal::NameOfEnum(
    QosReliabilityPolicy_descriptor(), value);
}
inline bool QosReliabilityPolicy_Parse(
    const ::std::string& name, QosReliabilityPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QosReliabilityPolicy>(
    QosReliabilityPolicy_descriptor(), name, value);
}
enum QosDurabilityPolicy {
  DURABILITY_SYSTEM_DEFAULT = 0,
  DURABILITY_TRANSIENT_LOCAL = 1,
  DURABILITY_VOLATILE = 2
};
bool QosDurabilityPolicy_IsValid(int value);
const QosDurabilityPolicy QosDurabilityPolicy_MIN = DURABILITY_SYSTEM_DEFAULT;
const QosDurabilityPolicy QosDurabilityPolicy_MAX = DURABILITY_VOLATILE;
const int QosDurabilityPolicy_ARRAYSIZE = QosDurabilityPolicy_MAX + 1;

const ::google::protobuf::EnumDescriptor* QosDurabilityPolicy_descriptor();
inline const ::std::string& QosDurabilityPolicy_Name(QosDurabilityPolicy value) {
  return ::google::protobuf::internal::NameOfEnum(
    QosDurabilityPolicy_descriptor(), value);
}
inline bool QosDurabilityPolicy_Parse(
    const ::std::string& name, QosDurabilityPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QosDurabilityPolicy>(
    QosDurabilityPolicy_descriptor(), name, value);
}
// ===================================================================

class QosProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.QosProfile) */ {
 public:
  QosProfile();
  virtual ~QosProfile();

  QosProfile(const QosProfile& from);

  inline QosProfile& operator=(const QosProfile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QosProfile& default_instance();

  static inline const QosProfile* internal_default_instance() {
    return reinterpret_cast<const QosProfile*>(
               &_QosProfile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(QosProfile* other);

  // implements Message ----------------------------------------------

  inline QosProfile* New() const PROTOBUF_FINAL { return New(NULL); }

  QosProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QosProfile& from);
  void MergeFrom(const QosProfile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QosProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mps = 3 [default = 0];
  bool has_mps() const;
  void clear_mps();
  static const int kMpsFieldNumber = 3;
  ::google::protobuf::uint32 mps() const;
  void set_mps(::google::protobuf::uint32 value);

  // optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
  bool has_history() const;
  void clear_history();
  static const int kHistoryFieldNumber = 1;
  ::apollo::cyber::proto::QosHistoryPolicy history() const;
  void set_history(::apollo::cyber::proto::QosHistoryPolicy value);

  // optional uint32 depth = 2 [default = 1];
  bool has_depth() const;
  void clear_depth();
  static const int kDepthFieldNumber = 2;
  ::google::protobuf::uint32 depth() const;
  void set_depth(::google::protobuf::uint32 value);

  // optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
  bool has_reliability() const;
  void clear_reliability();
  static const int kReliabilityFieldNumber = 4;
  ::apollo::cyber::proto::QosReliabilityPolicy reliability() const;
  void set_reliability(::apollo::cyber::proto::QosReliabilityPolicy value);

  // optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
  bool has_durability() const;
  void clear_durability();
  static const int kDurabilityFieldNumber = 5;
  ::apollo::cyber::proto::QosDurabilityPolicy durability() const;
  void set_durability(::apollo::cyber::proto::QosDurabilityPolicy value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.QosProfile)
 private:
  void set_has_history();
  void clear_has_history();
  void set_has_depth();
  void clear_has_depth();
  void set_has_mps();
  void clear_has_mps();
  void set_has_reliability();
  void clear_has_reliability();
  void set_has_durability();
  void clear_has_durability();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 mps_;
  int history_;
  ::google::protobuf::uint32 depth_;
  int reliability_;
  int durability_;
  friend struct protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// QosProfile

// optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
inline bool QosProfile::has_history() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QosProfile::set_has_history() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QosProfile::clear_has_history() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QosProfile::clear_history() {
  history_ = 1;
  clear_has_history();
}
inline ::apollo::cyber::proto::QosHistoryPolicy QosProfile::history() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.history)
  return static_cast< ::apollo::cyber::proto::QosHistoryPolicy >(history_);
}
inline void QosProfile::set_history(::apollo::cyber::proto::QosHistoryPolicy value) {
  assert(::apollo::cyber::proto::QosHistoryPolicy_IsValid(value));
  set_has_history();
  history_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.history)
}

// optional uint32 depth = 2 [default = 1];
inline bool QosProfile::has_depth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QosProfile::set_has_depth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QosProfile::clear_has_depth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QosProfile::clear_depth() {
  depth_ = 1u;
  clear_has_depth();
}
inline ::google::protobuf::uint32 QosProfile::depth() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.depth)
  return depth_;
}
inline void QosProfile::set_depth(::google::protobuf::uint32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.depth)
}

// optional uint32 mps = 3 [default = 0];
inline bool QosProfile::has_mps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QosProfile::set_has_mps() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QosProfile::clear_has_mps() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QosProfile::clear_mps() {
  mps_ = 0u;
  clear_has_mps();
}
inline ::google::protobuf::uint32 QosProfile::mps() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.mps)
  return mps_;
}
inline void QosProfile::set_mps(::google::protobuf::uint32 value) {
  set_has_mps();
  mps_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.mps)
}

// optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
inline bool QosProfile::has_reliability() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QosProfile::set_has_reliability() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QosProfile::clear_has_reliability() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QosProfile::clear_reliability() {
  reliability_ = 1;
  clear_has_reliability();
}
inline ::apollo::cyber::proto::QosReliabilityPolicy QosProfile::reliability() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.reliability)
  return static_cast< ::apollo::cyber::proto::QosReliabilityPolicy >(reliability_);
}
inline void QosProfile::set_reliability(::apollo::cyber::proto::QosReliabilityPolicy value) {
  assert(::apollo::cyber::proto::QosReliabilityPolicy_IsValid(value));
  set_has_reliability();
  reliability_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.reliability)
}

// optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
inline bool QosProfile::has_durability() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QosProfile::set_has_durability() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QosProfile::clear_has_durability() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QosProfile::clear_durability() {
  durability_ = 2;
  clear_has_durability();
}
inline ::apollo::cyber::proto::QosDurabilityPolicy QosProfile::durability() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.durability)
  return static_cast< ::apollo::cyber::proto::QosDurabilityPolicy >(durability_);
}
inline void QosProfile::set_durability(::apollo::cyber::proto::QosDurabilityPolicy value) {
  assert(::apollo::cyber::proto::QosDurabilityPolicy_IsValid(value));
  set_has_durability();
  durability_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.durability)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace cyber
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::cyber::proto::QosHistoryPolicy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::cyber::proto::QosHistoryPolicy>() {
  return ::apollo::cyber::proto::QosHistoryPolicy_descriptor();
}
template <> struct is_proto_enum< ::apollo::cyber::proto::QosReliabilityPolicy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::cyber::proto::QosReliabilityPolicy>() {
  return ::apollo::cyber::proto::QosReliabilityPolicy_descriptor();
}
template <> struct is_proto_enum< ::apollo::cyber::proto::QosDurabilityPolicy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::cyber::proto::QosDurabilityPolicy>() {
  return ::apollo::cyber::proto::QosDurabilityPolicy_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cyber_2fproto_2fqos_5fprofile_2eproto__INCLUDED
