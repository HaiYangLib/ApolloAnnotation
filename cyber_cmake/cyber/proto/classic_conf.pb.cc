// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/classic_conf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cyber/proto/classic_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace cyber {
namespace proto {
class ClassicTaskDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClassicTask> {
} _ClassicTask_default_instance_;
class SchedGroupDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SchedGroup> {
} _SchedGroup_default_instance_;
class ClassicConfDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClassicConf> {
} _ClassicConf_default_instance_;

namespace protobuf_cyber_2fproto_2fclassic_5fconf_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicTask, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicTask, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicTask, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicTask, prio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicTask, group_name_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, processor_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, affinity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, cpuset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, processor_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, processor_prio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedGroup, tasks_),
  0,
  4,
  1,
  2,
  3,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicConf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicConf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClassicConf, groups_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(ClassicTask)},
  { 11, 23, sizeof(SchedGroup)},
  { 30, 36, sizeof(ClassicConf)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassicTask_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SchedGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClassicConf_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cyber/proto/classic_conf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _ClassicTask_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SchedGroup_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  SchedGroup::_default_name_.Shutdown();
  _ClassicConf_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ClassicTask_default_instance_.DefaultConstruct();
  SchedGroup::_default_name_.DefaultConstruct();
  *SchedGroup::_default_name_.get_mutable() = ::std::string("default_grp", 11);
  _SchedGroup_default_instance_.DefaultConstruct();
  _ClassicConf_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\036cyber/proto/classic_conf.proto\022\022apollo"
      ".cyber.proto\"@\n\013ClassicTask\022\014\n\004name\030\001 \001("
      "\t\022\017\n\004prio\030\002 \001(\r:\0011\022\022\n\ngroup_name\030\003 \001(\t\"\305"
      "\001\n\nSchedGroup\022\031\n\004name\030\001 \002(\t:\013default_grp"
      "\022\025\n\rprocessor_num\030\002 \001(\r\022\020\n\010affinity\030\003 \001("
      "\t\022\016\n\006cpuset\030\004 \001(\t\022\030\n\020processor_policy\030\005 "
      "\001(\t\022\031\n\016processor_prio\030\006 \001(\005:\0010\022.\n\005tasks\030"
      "\007 \003(\0132\037.apollo.cyber.proto.ClassicTask\"="
      "\n\013ClassicConf\022.\n\006groups\030\001 \003(\0132\036.apollo.c"
      "yber.proto.SchedGroup"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 381);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cyber/proto/classic_conf.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cyber_2fproto_2fclassic_5fconf_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassicTask::kNameFieldNumber;
const int ClassicTask::kPrioFieldNumber;
const int ClassicTask::kGroupNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassicTask::ClassicTask()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ClassicTask)
}
ClassicTask::ClassicTask(const ClassicTask& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_group_name()) {
    group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
  }
  prio_ = from.prio_;
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ClassicTask)
}

void ClassicTask::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prio_ = 1u;
}

ClassicTask::~ClassicTask() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ClassicTask)
  SharedDtor();
}

void ClassicTask::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  group_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClassicTask::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassicTask::descriptor() {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassicTask& ClassicTask::default_instance() {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassicTask* ClassicTask::New(::google::protobuf::Arena* arena) const {
  ClassicTask* n = new ClassicTask;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassicTask::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ClassicTask)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_group_name()) {
      GOOGLE_DCHECK(!group_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*group_name_.UnsafeRawStringPointer())->clear();
    }
    prio_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassicTask::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ClassicTask)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ClassicTask.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 prio = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_prio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string group_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_group_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->group_name().data(), this->group_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ClassicTask.group_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ClassicTask)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ClassicTask)
  return false;
#undef DO_
}

void ClassicTask::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ClassicTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ClassicTask.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 prio = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prio(), output);
  }

  // optional string group_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ClassicTask.group_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->group_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ClassicTask)
}

::google::protobuf::uint8* ClassicTask::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ClassicTask)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ClassicTask.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 prio = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prio(), target);
  }

  // optional string group_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->group_name().data(), this->group_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ClassicTask.group_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->group_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ClassicTask)
  return target;
}

size_t ClassicTask::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ClassicTask)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string group_name = 3;
    if (has_group_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->group_name());
    }

    // optional uint32 prio = 2 [default = 1];
    if (has_prio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->prio());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassicTask::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ClassicTask)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassicTask* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassicTask>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ClassicTask)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ClassicTask)
    MergeFrom(*source);
  }
}

void ClassicTask::MergeFrom(const ClassicTask& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ClassicTask)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_group_name();
      group_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.group_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      prio_ = from.prio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClassicTask::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ClassicTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassicTask::CopyFrom(const ClassicTask& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ClassicTask)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassicTask::IsInitialized() const {
  return true;
}

void ClassicTask::Swap(ClassicTask* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassicTask::InternalSwap(ClassicTask* other) {
  name_.Swap(&other->name_);
  group_name_.Swap(&other->group_name_);
  std::swap(prio_, other->prio_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassicTask::GetMetadata() const {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassicTask

// optional string name = 1;
bool ClassicTask::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClassicTask::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ClassicTask::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClassicTask::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ClassicTask::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ClassicTask.name)
  return name_.GetNoArena();
}
void ClassicTask::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ClassicTask.name)
}
#if LANG_CXX11
void ClassicTask::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ClassicTask.name)
}
#endif
void ClassicTask::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ClassicTask.name)
}
void ClassicTask::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ClassicTask.name)
}
::std::string* ClassicTask::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ClassicTask.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClassicTask::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ClassicTask.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClassicTask::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ClassicTask.name)
}

// optional uint32 prio = 2 [default = 1];
bool ClassicTask::has_prio() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ClassicTask::set_has_prio() {
  _has_bits_[0] |= 0x00000004u;
}
void ClassicTask::clear_has_prio() {
  _has_bits_[0] &= ~0x00000004u;
}
void ClassicTask::clear_prio() {
  prio_ = 1u;
  clear_has_prio();
}
::google::protobuf::uint32 ClassicTask::prio() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ClassicTask.prio)
  return prio_;
}
void ClassicTask::set_prio(::google::protobuf::uint32 value) {
  set_has_prio();
  prio_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ClassicTask.prio)
}

// optional string group_name = 3;
bool ClassicTask::has_group_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClassicTask::set_has_group_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ClassicTask::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClassicTask::clear_group_name() {
  group_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_group_name();
}
const ::std::string& ClassicTask::group_name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ClassicTask.group_name)
  return group_name_.GetNoArena();
}
void ClassicTask::set_group_name(const ::std::string& value) {
  set_has_group_name();
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ClassicTask.group_name)
}
#if LANG_CXX11
void ClassicTask::set_group_name(::std::string&& value) {
  set_has_group_name();
  group_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ClassicTask.group_name)
}
#endif
void ClassicTask::set_group_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_group_name();
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ClassicTask.group_name)
}
void ClassicTask::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  group_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ClassicTask.group_name)
}
::std::string* ClassicTask::mutable_group_name() {
  set_has_group_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ClassicTask.group_name)
  return group_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClassicTask::release_group_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ClassicTask.group_name)
  clear_has_group_name();
  return group_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClassicTask::set_allocated_group_name(::std::string* group_name) {
  if (group_name != NULL) {
    set_has_group_name();
  } else {
    clear_has_group_name();
  }
  group_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), group_name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ClassicTask.group_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::google::protobuf::internal::ExplicitlyConstructed< ::std::string> SchedGroup::_default_name_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SchedGroup::kNameFieldNumber;
const int SchedGroup::kProcessorNumFieldNumber;
const int SchedGroup::kAffinityFieldNumber;
const int SchedGroup::kCpusetFieldNumber;
const int SchedGroup::kProcessorPolicyFieldNumber;
const int SchedGroup::kProcessorPrioFieldNumber;
const int SchedGroup::kTasksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SchedGroup::SchedGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.SchedGroup)
}
SchedGroup::SchedGroup(const SchedGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tasks_(from.tasks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&SchedGroup::_default_name_.get());
  if (from.has_name()) {
    name_.AssignWithDefault(&SchedGroup::_default_name_.get(), from.name_);
  }
  affinity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_affinity()) {
    affinity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.affinity_);
  }
  cpuset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cpuset()) {
    cpuset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpuset_);
  }
  processor_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_processor_policy()) {
    processor_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processor_policy_);
  }
  ::memcpy(&processor_num_, &from.processor_num_,
    reinterpret_cast<char*>(&processor_prio_) -
    reinterpret_cast<char*>(&processor_num_) + sizeof(processor_prio_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.SchedGroup)
}

void SchedGroup::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&SchedGroup::_default_name_.get());
  affinity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpuset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processor_policy_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&processor_num_, 0, reinterpret_cast<char*>(&processor_prio_) -
    reinterpret_cast<char*>(&processor_num_) + sizeof(processor_prio_));
}

SchedGroup::~SchedGroup() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.SchedGroup)
  SharedDtor();
}

void SchedGroup::SharedDtor() {
  name_.DestroyNoArena(&SchedGroup::_default_name_.get());
  affinity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cpuset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  processor_policy_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SchedGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SchedGroup::descriptor() {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SchedGroup& SchedGroup::default_instance() {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

SchedGroup* SchedGroup::New(::google::protobuf::Arena* arena) const {
  SchedGroup* n = new SchedGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SchedGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.SchedGroup)
  tasks_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&SchedGroup::_default_name_.get()));
      (*name_.UnsafeRawStringPointer())->assign(*&SchedGroup::_default_name_.get());
    }
    if (has_affinity()) {
      GOOGLE_DCHECK(!affinity_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*affinity_.UnsafeRawStringPointer())->clear();
    }
    if (has_cpuset()) {
      GOOGLE_DCHECK(!cpuset_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cpuset_.UnsafeRawStringPointer())->clear();
    }
    if (has_processor_policy()) {
      GOOGLE_DCHECK(!processor_policy_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*processor_policy_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 48u) {
    ::memset(&processor_num_, 0, reinterpret_cast<char*>(&processor_prio_) -
      reinterpret_cast<char*>(&processor_num_) + sizeof(processor_prio_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SchedGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.SchedGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1 [default = "default_grp"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.SchedGroup.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 processor_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_processor_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &processor_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string affinity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_affinity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->affinity().data(), this->affinity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.SchedGroup.affinity");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string cpuset = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cpuset()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cpuset().data(), this->cpuset().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.SchedGroup.cpuset");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string processor_policy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_processor_policy()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->processor_policy().data(), this->processor_policy().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.SchedGroup.processor_policy");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 processor_prio = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_processor_prio();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processor_prio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.cyber.proto.ClassicTask tasks = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tasks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.SchedGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.SchedGroup)
  return false;
#undef DO_
}

void SchedGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.SchedGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1 [default = "default_grp"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 processor_num = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->processor_num(), output);
  }

  // optional string affinity = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->affinity().data(), this->affinity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.affinity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->affinity(), output);
  }

  // optional string cpuset = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cpuset().data(), this->cpuset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.cpuset");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cpuset(), output);
  }

  // optional string processor_policy = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->processor_policy().data(), this->processor_policy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.processor_policy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->processor_policy(), output);
  }

  // optional int32 processor_prio = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->processor_prio(), output);
  }

  // repeated .apollo.cyber.proto.ClassicTask tasks = 7;
  for (unsigned int i = 0, n = this->tasks_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->tasks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.SchedGroup)
}

::google::protobuf::uint8* SchedGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.SchedGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1 [default = "default_grp"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 processor_num = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->processor_num(), target);
  }

  // optional string affinity = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->affinity().data(), this->affinity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.affinity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->affinity(), target);
  }

  // optional string cpuset = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cpuset().data(), this->cpuset().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.cpuset");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cpuset(), target);
  }

  // optional string processor_policy = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->processor_policy().data(), this->processor_policy().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.SchedGroup.processor_policy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->processor_policy(), target);
  }

  // optional int32 processor_prio = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->processor_prio(), target);
  }

  // repeated .apollo.cyber.proto.ClassicTask tasks = 7;
  for (unsigned int i = 0, n = this->tasks_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->tasks(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.SchedGroup)
  return target;
}

size_t SchedGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.SchedGroup)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string name = 1 [default = "default_grp"];
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .apollo.cyber.proto.ClassicTask tasks = 7;
  {
    unsigned int count = this->tasks_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tasks(i));
    }
  }

  if (_has_bits_[0 / 32] & 62u) {
    // optional string affinity = 3;
    if (has_affinity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->affinity());
    }

    // optional string cpuset = 4;
    if (has_cpuset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cpuset());
    }

    // optional string processor_policy = 5;
    if (has_processor_policy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->processor_policy());
    }

    // optional uint32 processor_num = 2;
    if (has_processor_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->processor_num());
    }

    // optional int32 processor_prio = 6 [default = 0];
    if (has_processor_prio()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->processor_prio());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SchedGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.SchedGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const SchedGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SchedGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.SchedGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.SchedGroup)
    MergeFrom(*source);
  }
}

void SchedGroup::MergeFrom(const SchedGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.SchedGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tasks_.MergeFrom(from.tasks_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&SchedGroup::_default_name_.get(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_affinity();
      affinity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.affinity_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_cpuset();
      cpuset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cpuset_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_processor_policy();
      processor_policy_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.processor_policy_);
    }
    if (cached_has_bits & 0x00000010u) {
      processor_num_ = from.processor_num_;
    }
    if (cached_has_bits & 0x00000020u) {
      processor_prio_ = from.processor_prio_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SchedGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.SchedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedGroup::CopyFrom(const SchedGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.SchedGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedGroup::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SchedGroup::Swap(SchedGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SchedGroup::InternalSwap(SchedGroup* other) {
  tasks_.InternalSwap(&other->tasks_);
  name_.Swap(&other->name_);
  affinity_.Swap(&other->affinity_);
  cpuset_.Swap(&other->cpuset_);
  processor_policy_.Swap(&other->processor_policy_);
  std::swap(processor_num_, other->processor_num_);
  std::swap(processor_prio_, other->processor_prio_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SchedGroup::GetMetadata() const {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SchedGroup

// required string name = 1 [default = "default_grp"];
bool SchedGroup::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SchedGroup::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void SchedGroup::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void SchedGroup::clear_name() {
  name_.ClearToDefaultNoArena(&SchedGroup::_default_name_.get());
  clear_has_name();
}
const ::std::string& SchedGroup::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.name)
  return name_.GetNoArena();
}
void SchedGroup::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&SchedGroup::_default_name_.get(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.SchedGroup.name)
}
#if LANG_CXX11
void SchedGroup::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &SchedGroup::_default_name_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.SchedGroup.name)
}
#endif
void SchedGroup::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&SchedGroup::_default_name_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.SchedGroup.name)
}
void SchedGroup::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&SchedGroup::_default_name_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.SchedGroup.name)
}
::std::string* SchedGroup::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.SchedGroup.name)
  return name_.MutableNoArena(&SchedGroup::_default_name_.get());
}
::std::string* SchedGroup::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.SchedGroup.name)
  clear_has_name();
  return name_.ReleaseNoArena(&SchedGroup::_default_name_.get());
}
void SchedGroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&SchedGroup::_default_name_.get(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.SchedGroup.name)
}

// optional uint32 processor_num = 2;
bool SchedGroup::has_processor_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SchedGroup::set_has_processor_num() {
  _has_bits_[0] |= 0x00000010u;
}
void SchedGroup::clear_has_processor_num() {
  _has_bits_[0] &= ~0x00000010u;
}
void SchedGroup::clear_processor_num() {
  processor_num_ = 0u;
  clear_has_processor_num();
}
::google::protobuf::uint32 SchedGroup::processor_num() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.processor_num)
  return processor_num_;
}
void SchedGroup::set_processor_num(::google::protobuf::uint32 value) {
  set_has_processor_num();
  processor_num_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.SchedGroup.processor_num)
}

// optional string affinity = 3;
bool SchedGroup::has_affinity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SchedGroup::set_has_affinity() {
  _has_bits_[0] |= 0x00000002u;
}
void SchedGroup::clear_has_affinity() {
  _has_bits_[0] &= ~0x00000002u;
}
void SchedGroup::clear_affinity() {
  affinity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_affinity();
}
const ::std::string& SchedGroup::affinity() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.affinity)
  return affinity_.GetNoArena();
}
void SchedGroup::set_affinity(const ::std::string& value) {
  set_has_affinity();
  affinity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.SchedGroup.affinity)
}
#if LANG_CXX11
void SchedGroup::set_affinity(::std::string&& value) {
  set_has_affinity();
  affinity_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.SchedGroup.affinity)
}
#endif
void SchedGroup::set_affinity(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_affinity();
  affinity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.SchedGroup.affinity)
}
void SchedGroup::set_affinity(const char* value, size_t size) {
  set_has_affinity();
  affinity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.SchedGroup.affinity)
}
::std::string* SchedGroup::mutable_affinity() {
  set_has_affinity();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.SchedGroup.affinity)
  return affinity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SchedGroup::release_affinity() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.SchedGroup.affinity)
  clear_has_affinity();
  return affinity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SchedGroup::set_allocated_affinity(::std::string* affinity) {
  if (affinity != NULL) {
    set_has_affinity();
  } else {
    clear_has_affinity();
  }
  affinity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), affinity);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.SchedGroup.affinity)
}

// optional string cpuset = 4;
bool SchedGroup::has_cpuset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SchedGroup::set_has_cpuset() {
  _has_bits_[0] |= 0x00000004u;
}
void SchedGroup::clear_has_cpuset() {
  _has_bits_[0] &= ~0x00000004u;
}
void SchedGroup::clear_cpuset() {
  cpuset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cpuset();
}
const ::std::string& SchedGroup::cpuset() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.cpuset)
  return cpuset_.GetNoArena();
}
void SchedGroup::set_cpuset(const ::std::string& value) {
  set_has_cpuset();
  cpuset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.SchedGroup.cpuset)
}
#if LANG_CXX11
void SchedGroup::set_cpuset(::std::string&& value) {
  set_has_cpuset();
  cpuset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.SchedGroup.cpuset)
}
#endif
void SchedGroup::set_cpuset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cpuset();
  cpuset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.SchedGroup.cpuset)
}
void SchedGroup::set_cpuset(const char* value, size_t size) {
  set_has_cpuset();
  cpuset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.SchedGroup.cpuset)
}
::std::string* SchedGroup::mutable_cpuset() {
  set_has_cpuset();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.SchedGroup.cpuset)
  return cpuset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SchedGroup::release_cpuset() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.SchedGroup.cpuset)
  clear_has_cpuset();
  return cpuset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SchedGroup::set_allocated_cpuset(::std::string* cpuset) {
  if (cpuset != NULL) {
    set_has_cpuset();
  } else {
    clear_has_cpuset();
  }
  cpuset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpuset);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.SchedGroup.cpuset)
}

// optional string processor_policy = 5;
bool SchedGroup::has_processor_policy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SchedGroup::set_has_processor_policy() {
  _has_bits_[0] |= 0x00000008u;
}
void SchedGroup::clear_has_processor_policy() {
  _has_bits_[0] &= ~0x00000008u;
}
void SchedGroup::clear_processor_policy() {
  processor_policy_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_processor_policy();
}
const ::std::string& SchedGroup::processor_policy() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.processor_policy)
  return processor_policy_.GetNoArena();
}
void SchedGroup::set_processor_policy(const ::std::string& value) {
  set_has_processor_policy();
  processor_policy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.SchedGroup.processor_policy)
}
#if LANG_CXX11
void SchedGroup::set_processor_policy(::std::string&& value) {
  set_has_processor_policy();
  processor_policy_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.SchedGroup.processor_policy)
}
#endif
void SchedGroup::set_processor_policy(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_processor_policy();
  processor_policy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.SchedGroup.processor_policy)
}
void SchedGroup::set_processor_policy(const char* value, size_t size) {
  set_has_processor_policy();
  processor_policy_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.SchedGroup.processor_policy)
}
::std::string* SchedGroup::mutable_processor_policy() {
  set_has_processor_policy();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.SchedGroup.processor_policy)
  return processor_policy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SchedGroup::release_processor_policy() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.SchedGroup.processor_policy)
  clear_has_processor_policy();
  return processor_policy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SchedGroup::set_allocated_processor_policy(::std::string* processor_policy) {
  if (processor_policy != NULL) {
    set_has_processor_policy();
  } else {
    clear_has_processor_policy();
  }
  processor_policy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), processor_policy);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.SchedGroup.processor_policy)
}

// optional int32 processor_prio = 6 [default = 0];
bool SchedGroup::has_processor_prio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SchedGroup::set_has_processor_prio() {
  _has_bits_[0] |= 0x00000020u;
}
void SchedGroup::clear_has_processor_prio() {
  _has_bits_[0] &= ~0x00000020u;
}
void SchedGroup::clear_processor_prio() {
  processor_prio_ = 0;
  clear_has_processor_prio();
}
::google::protobuf::int32 SchedGroup::processor_prio() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.processor_prio)
  return processor_prio_;
}
void SchedGroup::set_processor_prio(::google::protobuf::int32 value) {
  set_has_processor_prio();
  processor_prio_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.SchedGroup.processor_prio)
}

// repeated .apollo.cyber.proto.ClassicTask tasks = 7;
int SchedGroup::tasks_size() const {
  return tasks_.size();
}
void SchedGroup::clear_tasks() {
  tasks_.Clear();
}
const ::apollo::cyber::proto::ClassicTask& SchedGroup::tasks(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.SchedGroup.tasks)
  return tasks_.Get(index);
}
::apollo::cyber::proto::ClassicTask* SchedGroup::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.SchedGroup.tasks)
  return tasks_.Mutable(index);
}
::apollo::cyber::proto::ClassicTask* SchedGroup::add_tasks() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.SchedGroup.tasks)
  return tasks_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ClassicTask >*
SchedGroup::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.SchedGroup.tasks)
  return &tasks_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ClassicTask >&
SchedGroup::tasks() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.SchedGroup.tasks)
  return tasks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClassicConf::kGroupsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClassicConf::ClassicConf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ClassicConf)
}
ClassicConf::ClassicConf(const ClassicConf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      groups_(from.groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ClassicConf)
}

void ClassicConf::SharedCtor() {
  _cached_size_ = 0;
}

ClassicConf::~ClassicConf() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ClassicConf)
  SharedDtor();
}

void ClassicConf::SharedDtor() {
}

void ClassicConf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClassicConf::descriptor() {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClassicConf& ClassicConf::default_instance() {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClassicConf* ClassicConf::New(::google::protobuf::Arena* arena) const {
  ClassicConf* n = new ClassicConf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClassicConf::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ClassicConf)
  groups_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ClassicConf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ClassicConf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.cyber.proto.SchedGroup groups = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ClassicConf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ClassicConf)
  return false;
#undef DO_
}

void ClassicConf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ClassicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.SchedGroup groups = 1;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->groups(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ClassicConf)
}

::google::protobuf::uint8* ClassicConf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ClassicConf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.cyber.proto.SchedGroup groups = 1;
  for (unsigned int i = 0, n = this->groups_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->groups(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ClassicConf)
  return target;
}

size_t ClassicConf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ClassicConf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.cyber.proto.SchedGroup groups = 1;
  {
    unsigned int count = this->groups_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->groups(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClassicConf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ClassicConf)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassicConf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClassicConf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ClassicConf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ClassicConf)
    MergeFrom(*source);
  }
}

void ClassicConf::MergeFrom(const ClassicConf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ClassicConf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  groups_.MergeFrom(from.groups_);
}

void ClassicConf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ClassicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassicConf::CopyFrom(const ClassicConf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ClassicConf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassicConf::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->groups())) return false;
  return true;
}

void ClassicConf::Swap(ClassicConf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClassicConf::InternalSwap(ClassicConf* other) {
  groups_.InternalSwap(&other->groups_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClassicConf::GetMetadata() const {
  protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fclassic_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClassicConf

// repeated .apollo.cyber.proto.SchedGroup groups = 1;
int ClassicConf::groups_size() const {
  return groups_.size();
}
void ClassicConf::clear_groups() {
  groups_.Clear();
}
const ::apollo::cyber::proto::SchedGroup& ClassicConf::groups(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ClassicConf.groups)
  return groups_.Get(index);
}
::apollo::cyber::proto::SchedGroup* ClassicConf::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ClassicConf.groups)
  return groups_.Mutable(index);
}
::apollo::cyber::proto::SchedGroup* ClassicConf::add_groups() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.ClassicConf.groups)
  return groups_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::SchedGroup >*
ClassicConf::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.ClassicConf.groups)
  return &groups_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::SchedGroup >&
ClassicConf::groups() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.ClassicConf.groups)
  return groups_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
