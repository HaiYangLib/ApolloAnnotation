// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/cyber_conf.proto

#ifndef PROTOBUF_cyber_2fproto_2fcyber_5fconf_2eproto__INCLUDED
#define PROTOBUF_cyber_2fproto_2fcyber_5fconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "cyber/proto/scheduler_conf.pb.h"
#include "cyber/proto/transport_conf.pb.h"
#include "cyber/proto/run_mode_conf.pb.h"
// @@protoc_insertion_point(includes)
namespace apollo {
namespace cyber {
namespace proto {
class CommunicationMode;
class CommunicationModeDefaultTypeInternal;
extern CommunicationModeDefaultTypeInternal _CommunicationMode_default_instance_;
class CyberConfig;
class CyberConfigDefaultTypeInternal;
extern CyberConfigDefaultTypeInternal _CyberConfig_default_instance_;
class InnerThread;
class InnerThreadDefaultTypeInternal;
extern InnerThreadDefaultTypeInternal _InnerThread_default_instance_;
class ResourceLimit;
class ResourceLimitDefaultTypeInternal;
extern ResourceLimitDefaultTypeInternal _ResourceLimit_default_instance_;
class RtpsParticipantAttr;
class RtpsParticipantAttrDefaultTypeInternal;
extern RtpsParticipantAttrDefaultTypeInternal _RtpsParticipantAttr_default_instance_;
class RunModeConf;
class RunModeConfDefaultTypeInternal;
extern RunModeConfDefaultTypeInternal _RunModeConf_default_instance_;
class SchedulerConf;
class SchedulerConfDefaultTypeInternal;
extern SchedulerConfDefaultTypeInternal _SchedulerConf_default_instance_;
class ShmConf;
class ShmConfDefaultTypeInternal;
extern ShmConfDefaultTypeInternal _ShmConf_default_instance_;
class ShmMulticastLocator;
class ShmMulticastLocatorDefaultTypeInternal;
extern ShmMulticastLocatorDefaultTypeInternal _ShmMulticastLocator_default_instance_;
class TransportConf;
class TransportConfDefaultTypeInternal;
extern TransportConfDefaultTypeInternal _TransportConf_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo

namespace apollo {
namespace cyber {
namespace proto {

namespace protobuf_cyber_2fproto_2fcyber_5fconf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cyber_2fproto_2fcyber_5fconf_2eproto

// ===================================================================

class CyberConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.CyberConfig) */ {
 public:
  CyberConfig();
  virtual ~CyberConfig();

  CyberConfig(const CyberConfig& from);

  inline CyberConfig& operator=(const CyberConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CyberConfig& default_instance();

  static inline const CyberConfig* internal_default_instance() {
    return reinterpret_cast<const CyberConfig*>(
               &_CyberConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CyberConfig* other);

  // implements Message ----------------------------------------------

  inline CyberConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  CyberConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CyberConfig& from);
  void MergeFrom(const CyberConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CyberConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .apollo.cyber.proto.SchedulerConf scheduler_conf = 1;
  bool has_scheduler_conf() const;
  void clear_scheduler_conf();
  static const int kSchedulerConfFieldNumber = 1;
  const ::apollo::cyber::proto::SchedulerConf& scheduler_conf() const;
  ::apollo::cyber::proto::SchedulerConf* mutable_scheduler_conf();
  ::apollo::cyber::proto::SchedulerConf* release_scheduler_conf();
  void set_allocated_scheduler_conf(::apollo::cyber::proto::SchedulerConf* scheduler_conf);

  // optional .apollo.cyber.proto.TransportConf transport_conf = 2;
  bool has_transport_conf() const;
  void clear_transport_conf();
  static const int kTransportConfFieldNumber = 2;
  const ::apollo::cyber::proto::TransportConf& transport_conf() const;
  ::apollo::cyber::proto::TransportConf* mutable_transport_conf();
  ::apollo::cyber::proto::TransportConf* release_transport_conf();
  void set_allocated_transport_conf(::apollo::cyber::proto::TransportConf* transport_conf);

  // optional .apollo.cyber.proto.RunModeConf run_mode_conf = 3;
  bool has_run_mode_conf() const;
  void clear_run_mode_conf();
  static const int kRunModeConfFieldNumber = 3;
  const ::apollo::cyber::proto::RunModeConf& run_mode_conf() const;
  ::apollo::cyber::proto::RunModeConf* mutable_run_mode_conf();
  ::apollo::cyber::proto::RunModeConf* release_run_mode_conf();
  void set_allocated_run_mode_conf(::apollo::cyber::proto::RunModeConf* run_mode_conf);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.CyberConfig)
 private:
  void set_has_scheduler_conf();
  void clear_has_scheduler_conf();
  void set_has_transport_conf();
  void clear_has_transport_conf();
  void set_has_run_mode_conf();
  void clear_has_run_mode_conf();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::apollo::cyber::proto::SchedulerConf* scheduler_conf_;
  ::apollo::cyber::proto::TransportConf* transport_conf_;
  ::apollo::cyber::proto::RunModeConf* run_mode_conf_;
  friend struct protobuf_cyber_2fproto_2fcyber_5fconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CyberConfig

// optional .apollo.cyber.proto.SchedulerConf scheduler_conf = 1;
inline bool CyberConfig::has_scheduler_conf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CyberConfig::set_has_scheduler_conf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CyberConfig::clear_has_scheduler_conf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CyberConfig::clear_scheduler_conf() {
  if (scheduler_conf_ != NULL) scheduler_conf_->::apollo::cyber::proto::SchedulerConf::Clear();
  clear_has_scheduler_conf();
}
inline const ::apollo::cyber::proto::SchedulerConf& CyberConfig::scheduler_conf() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.CyberConfig.scheduler_conf)
  return scheduler_conf_ != NULL ? *scheduler_conf_
                         : *::apollo::cyber::proto::SchedulerConf::internal_default_instance();
}
inline ::apollo::cyber::proto::SchedulerConf* CyberConfig::mutable_scheduler_conf() {
  set_has_scheduler_conf();
  if (scheduler_conf_ == NULL) {
    scheduler_conf_ = new ::apollo::cyber::proto::SchedulerConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.CyberConfig.scheduler_conf)
  return scheduler_conf_;
}
inline ::apollo::cyber::proto::SchedulerConf* CyberConfig::release_scheduler_conf() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.CyberConfig.scheduler_conf)
  clear_has_scheduler_conf();
  ::apollo::cyber::proto::SchedulerConf* temp = scheduler_conf_;
  scheduler_conf_ = NULL;
  return temp;
}
inline void CyberConfig::set_allocated_scheduler_conf(::apollo::cyber::proto::SchedulerConf* scheduler_conf) {
  delete scheduler_conf_;
  scheduler_conf_ = scheduler_conf;
  if (scheduler_conf) {
    set_has_scheduler_conf();
  } else {
    clear_has_scheduler_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.CyberConfig.scheduler_conf)
}

// optional .apollo.cyber.proto.TransportConf transport_conf = 2;
inline bool CyberConfig::has_transport_conf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CyberConfig::set_has_transport_conf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CyberConfig::clear_has_transport_conf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CyberConfig::clear_transport_conf() {
  if (transport_conf_ != NULL) transport_conf_->::apollo::cyber::proto::TransportConf::Clear();
  clear_has_transport_conf();
}
inline const ::apollo::cyber::proto::TransportConf& CyberConfig::transport_conf() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.CyberConfig.transport_conf)
  return transport_conf_ != NULL ? *transport_conf_
                         : *::apollo::cyber::proto::TransportConf::internal_default_instance();
}
inline ::apollo::cyber::proto::TransportConf* CyberConfig::mutable_transport_conf() {
  set_has_transport_conf();
  if (transport_conf_ == NULL) {
    transport_conf_ = new ::apollo::cyber::proto::TransportConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.CyberConfig.transport_conf)
  return transport_conf_;
}
inline ::apollo::cyber::proto::TransportConf* CyberConfig::release_transport_conf() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.CyberConfig.transport_conf)
  clear_has_transport_conf();
  ::apollo::cyber::proto::TransportConf* temp = transport_conf_;
  transport_conf_ = NULL;
  return temp;
}
inline void CyberConfig::set_allocated_transport_conf(::apollo::cyber::proto::TransportConf* transport_conf) {
  delete transport_conf_;
  transport_conf_ = transport_conf;
  if (transport_conf) {
    set_has_transport_conf();
  } else {
    clear_has_transport_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.CyberConfig.transport_conf)
}

// optional .apollo.cyber.proto.RunModeConf run_mode_conf = 3;
inline bool CyberConfig::has_run_mode_conf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CyberConfig::set_has_run_mode_conf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CyberConfig::clear_has_run_mode_conf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CyberConfig::clear_run_mode_conf() {
  if (run_mode_conf_ != NULL) run_mode_conf_->::apollo::cyber::proto::RunModeConf::Clear();
  clear_has_run_mode_conf();
}
inline const ::apollo::cyber::proto::RunModeConf& CyberConfig::run_mode_conf() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.CyberConfig.run_mode_conf)
  return run_mode_conf_ != NULL ? *run_mode_conf_
                         : *::apollo::cyber::proto::RunModeConf::internal_default_instance();
}
inline ::apollo::cyber::proto::RunModeConf* CyberConfig::mutable_run_mode_conf() {
  set_has_run_mode_conf();
  if (run_mode_conf_ == NULL) {
    run_mode_conf_ = new ::apollo::cyber::proto::RunModeConf;
  }
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.CyberConfig.run_mode_conf)
  return run_mode_conf_;
}
inline ::apollo::cyber::proto::RunModeConf* CyberConfig::release_run_mode_conf() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.CyberConfig.run_mode_conf)
  clear_has_run_mode_conf();
  ::apollo::cyber::proto::RunModeConf* temp = run_mode_conf_;
  run_mode_conf_ = NULL;
  return temp;
}
inline void CyberConfig::set_allocated_run_mode_conf(::apollo::cyber::proto::RunModeConf* run_mode_conf) {
  delete run_mode_conf_;
  run_mode_conf_ = run_mode_conf;
  if (run_mode_conf) {
    set_has_run_mode_conf();
  } else {
    clear_has_run_mode_conf();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.CyberConfig.run_mode_conf)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cyber_2fproto_2fcyber_5fconf_2eproto__INCLUDED
