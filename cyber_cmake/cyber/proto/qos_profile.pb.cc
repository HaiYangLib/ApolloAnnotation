// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/qos_profile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cyber/proto/qos_profile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace cyber {
namespace proto {
class QosProfileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QosProfile> {
} _QosProfile_default_instance_;

namespace protobuf_cyber_2fproto_2fqos_5fprofile_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, mps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, reliability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QosProfile, durability_),
  1,
  2,
  0,
  3,
  4,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(QosProfile)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_QosProfile_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cyber/proto/qos_profile.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _QosProfile_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _QosProfile_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\035cyber/proto/qos_profile.proto\022\022apollo."
      "cyber.proto\"\237\002\n\nQosProfile\022H\n\007history\030\001 "
      "\001(\0162$.apollo.cyber.proto.QosHistoryPolic"
      "y:\021HISTORY_KEEP_LAST\022\020\n\005depth\030\002 \001(\r:\0011\022\016"
      "\n\003mps\030\003 \001(\r:\0010\022S\n\013reliability\030\004 \001(\0162(.ap"
      "ollo.cyber.proto.QosReliabilityPolicy:\024R"
      "ELIABILITY_RELIABLE\022P\n\ndurability\030\005 \001(\0162"
      "\'.apollo.cyber.proto.QosDurabilityPolicy"
      ":\023DURABILITY_VOLATILE*[\n\020QosHistoryPolic"
      "y\022\032\n\026HISTORY_SYSTEM_DEFAULT\020\000\022\025\n\021HISTORY"
      "_KEEP_LAST\020\001\022\024\n\020HISTORY_KEEP_ALL\020\002*m\n\024Qo"
      "sReliabilityPolicy\022\036\n\032RELIABILITY_SYSTEM"
      "_DEFAULT\020\000\022\030\n\024RELIABILITY_RELIABLE\020\001\022\033\n\027"
      "RELIABILITY_BEST_EFFORT\020\002*m\n\023QosDurabili"
      "tyPolicy\022\035\n\031DURABILITY_SYSTEM_DEFAULT\020\000\022"
      "\036\n\032DURABILITY_TRANSIENT_LOCAL\020\001\022\027\n\023DURAB"
      "ILITY_VOLATILE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 656);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cyber/proto/qos_profile.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cyber_2fproto_2fqos_5fprofile_2eproto

const ::google::protobuf::EnumDescriptor* QosHistoryPolicy_descriptor() {
  protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::file_level_enum_descriptors[0];
}
bool QosHistoryPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* QosReliabilityPolicy_descriptor() {
  protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::file_level_enum_descriptors[1];
}
bool QosReliabilityPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* QosDurabilityPolicy_descriptor() {
  protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::file_level_enum_descriptors[2];
}
bool QosDurabilityPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QosProfile::kHistoryFieldNumber;
const int QosProfile::kDepthFieldNumber;
const int QosProfile::kMpsFieldNumber;
const int QosProfile::kReliabilityFieldNumber;
const int QosProfile::kDurabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QosProfile::QosProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.QosProfile)
}
QosProfile::QosProfile(const QosProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&mps_, &from.mps_,
    reinterpret_cast<char*>(&durability_) -
    reinterpret_cast<char*>(&mps_) + sizeof(durability_));
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.QosProfile)
}

void QosProfile::SharedCtor() {
  _cached_size_ = 0;
  mps_ = 0u;
  history_ = 1;
  depth_ = 1u;
  reliability_ = 1;
  durability_ = 2;
}

QosProfile::~QosProfile() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.QosProfile)
  SharedDtor();
}

void QosProfile::SharedDtor() {
}

void QosProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QosProfile::descriptor() {
  protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QosProfile& QosProfile::default_instance() {
  protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

QosProfile* QosProfile::New(::google::protobuf::Arena* arena) const {
  QosProfile* n = new QosProfile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QosProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.QosProfile)
  if (_has_bits_[0 / 32] & 31u) {
    mps_ = 0u;
    history_ = 1;
    depth_ = 1u;
    reliability_ = 1;
    durability_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool QosProfile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.QosProfile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::QosHistoryPolicy_IsValid(value)) {
            set_history(static_cast< ::apollo::cyber::proto::QosHistoryPolicy >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depth = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_depth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 mps = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_mps();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::QosReliabilityPolicy_IsValid(value)) {
            set_reliability(static_cast< ::apollo::cyber::proto::QosReliabilityPolicy >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::apollo::cyber::proto::QosDurabilityPolicy_IsValid(value)) {
            set_durability(static_cast< ::apollo::cyber::proto::QosDurabilityPolicy >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.QosProfile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.QosProfile)
  return false;
#undef DO_
}

void QosProfile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.QosProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->history(), output);
  }

  // optional uint32 depth = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depth(), output);
  }

  // optional uint32 mps = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mps(), output);
  }

  // optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->reliability(), output);
  }

  // optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->durability(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.QosProfile)
}

::google::protobuf::uint8* QosProfile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.QosProfile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->history(), target);
  }

  // optional uint32 depth = 2 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depth(), target);
  }

  // optional uint32 mps = 3 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mps(), target);
  }

  // optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->reliability(), target);
  }

  // optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->durability(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.QosProfile)
  return target;
}

size_t QosProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.QosProfile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 mps = 3 [default = 0];
    if (has_mps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mps());
    }

    // optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
    if (has_history()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->history());
    }

    // optional uint32 depth = 2 [default = 1];
    if (has_depth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depth());
    }

    // optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
    if (has_reliability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->reliability());
    }

    // optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
    if (has_durability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->durability());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QosProfile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.QosProfile)
  GOOGLE_DCHECK_NE(&from, this);
  const QosProfile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QosProfile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.QosProfile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.QosProfile)
    MergeFrom(*source);
  }
}

void QosProfile::MergeFrom(const QosProfile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.QosProfile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mps_ = from.mps_;
    }
    if (cached_has_bits & 0x00000002u) {
      history_ = from.history_;
    }
    if (cached_has_bits & 0x00000004u) {
      depth_ = from.depth_;
    }
    if (cached_has_bits & 0x00000008u) {
      reliability_ = from.reliability_;
    }
    if (cached_has_bits & 0x00000010u) {
      durability_ = from.durability_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void QosProfile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.QosProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QosProfile::CopyFrom(const QosProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.QosProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QosProfile::IsInitialized() const {
  return true;
}

void QosProfile::Swap(QosProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QosProfile::InternalSwap(QosProfile* other) {
  std::swap(mps_, other->mps_);
  std::swap(history_, other->history_);
  std::swap(depth_, other->depth_);
  std::swap(reliability_, other->reliability_);
  std::swap(durability_, other->durability_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QosProfile::GetMetadata() const {
  protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QosProfile

// optional .apollo.cyber.proto.QosHistoryPolicy history = 1 [default = HISTORY_KEEP_LAST];
bool QosProfile::has_history() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QosProfile::set_has_history() {
  _has_bits_[0] |= 0x00000002u;
}
void QosProfile::clear_has_history() {
  _has_bits_[0] &= ~0x00000002u;
}
void QosProfile::clear_history() {
  history_ = 1;
  clear_has_history();
}
::apollo::cyber::proto::QosHistoryPolicy QosProfile::history() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.history)
  return static_cast< ::apollo::cyber::proto::QosHistoryPolicy >(history_);
}
void QosProfile::set_history(::apollo::cyber::proto::QosHistoryPolicy value) {
  assert(::apollo::cyber::proto::QosHistoryPolicy_IsValid(value));
  set_has_history();
  history_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.history)
}

// optional uint32 depth = 2 [default = 1];
bool QosProfile::has_depth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QosProfile::set_has_depth() {
  _has_bits_[0] |= 0x00000004u;
}
void QosProfile::clear_has_depth() {
  _has_bits_[0] &= ~0x00000004u;
}
void QosProfile::clear_depth() {
  depth_ = 1u;
  clear_has_depth();
}
::google::protobuf::uint32 QosProfile::depth() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.depth)
  return depth_;
}
void QosProfile::set_depth(::google::protobuf::uint32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.depth)
}

// optional uint32 mps = 3 [default = 0];
bool QosProfile::has_mps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QosProfile::set_has_mps() {
  _has_bits_[0] |= 0x00000001u;
}
void QosProfile::clear_has_mps() {
  _has_bits_[0] &= ~0x00000001u;
}
void QosProfile::clear_mps() {
  mps_ = 0u;
  clear_has_mps();
}
::google::protobuf::uint32 QosProfile::mps() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.mps)
  return mps_;
}
void QosProfile::set_mps(::google::protobuf::uint32 value) {
  set_has_mps();
  mps_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.mps)
}

// optional .apollo.cyber.proto.QosReliabilityPolicy reliability = 4 [default = RELIABILITY_RELIABLE];
bool QosProfile::has_reliability() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QosProfile::set_has_reliability() {
  _has_bits_[0] |= 0x00000008u;
}
void QosProfile::clear_has_reliability() {
  _has_bits_[0] &= ~0x00000008u;
}
void QosProfile::clear_reliability() {
  reliability_ = 1;
  clear_has_reliability();
}
::apollo::cyber::proto::QosReliabilityPolicy QosProfile::reliability() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.reliability)
  return static_cast< ::apollo::cyber::proto::QosReliabilityPolicy >(reliability_);
}
void QosProfile::set_reliability(::apollo::cyber::proto::QosReliabilityPolicy value) {
  assert(::apollo::cyber::proto::QosReliabilityPolicy_IsValid(value));
  set_has_reliability();
  reliability_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.reliability)
}

// optional .apollo.cyber.proto.QosDurabilityPolicy durability = 5 [default = DURABILITY_VOLATILE];
bool QosProfile::has_durability() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QosProfile::set_has_durability() {
  _has_bits_[0] |= 0x00000010u;
}
void QosProfile::clear_has_durability() {
  _has_bits_[0] &= ~0x00000010u;
}
void QosProfile::clear_durability() {
  durability_ = 2;
  clear_has_durability();
}
::apollo::cyber::proto::QosDurabilityPolicy QosProfile::durability() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.QosProfile.durability)
  return static_cast< ::apollo::cyber::proto::QosDurabilityPolicy >(durability_);
}
void QosProfile::set_durability(::apollo::cyber::proto::QosDurabilityPolicy value) {
  assert(::apollo::cyber::proto::QosDurabilityPolicy_IsValid(value));
  set_has_durability();
  durability_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.QosProfile.durability)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
