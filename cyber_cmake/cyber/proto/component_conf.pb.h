// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/component_conf.proto

#ifndef PROTOBUF_cyber_2fproto_2fcomponent_5fconf_2eproto__INCLUDED
#define PROTOBUF_cyber_2fproto_2fcomponent_5fconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "cyber/proto/qos_profile.pb.h"
// @@protoc_insertion_point(includes)
namespace apollo {
namespace cyber {
namespace proto {
class ComponentConfig;
class ComponentConfigDefaultTypeInternal;
extern ComponentConfigDefaultTypeInternal _ComponentConfig_default_instance_;
class QosProfile;
class QosProfileDefaultTypeInternal;
extern QosProfileDefaultTypeInternal _QosProfile_default_instance_;
class ReaderOption;
class ReaderOptionDefaultTypeInternal;
extern ReaderOptionDefaultTypeInternal _ReaderOption_default_instance_;
class TimerComponentConfig;
class TimerComponentConfigDefaultTypeInternal;
extern TimerComponentConfigDefaultTypeInternal _TimerComponentConfig_default_instance_;
}  // namespace proto
}  // namespace cyber
}  // namespace apollo

namespace apollo {
namespace cyber {
namespace proto {

namespace protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto

// ===================================================================

class ReaderOption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.ReaderOption) */ {
 public:
  ReaderOption();
  virtual ~ReaderOption();

  ReaderOption(const ReaderOption& from);

  inline ReaderOption& operator=(const ReaderOption& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReaderOption& default_instance();

  static inline const ReaderOption* internal_default_instance() {
    return reinterpret_cast<const ReaderOption*>(
               &_ReaderOption_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ReaderOption* other);

  // implements Message ----------------------------------------------

  inline ReaderOption* New() const PROTOBUF_FINAL { return New(NULL); }

  ReaderOption* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReaderOption& from);
  void MergeFrom(const ReaderOption& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReaderOption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // optional .apollo.cyber.proto.QosProfile qos_profile = 2;
  bool has_qos_profile() const;
  void clear_qos_profile();
  static const int kQosProfileFieldNumber = 2;
  const ::apollo::cyber::proto::QosProfile& qos_profile() const;
  ::apollo::cyber::proto::QosProfile* mutable_qos_profile();
  ::apollo::cyber::proto::QosProfile* release_qos_profile();
  void set_allocated_qos_profile(::apollo::cyber::proto::QosProfile* qos_profile);

  // optional uint32 pending_queue_size = 3 [default = 1];
  bool has_pending_queue_size() const;
  void clear_pending_queue_size();
  static const int kPendingQueueSizeFieldNumber = 3;
  ::google::protobuf::uint32 pending_queue_size() const;
  void set_pending_queue_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.ReaderOption)
 private:
  void set_has_channel();
  void clear_has_channel();
  void set_has_qos_profile();
  void clear_has_qos_profile();
  void set_has_pending_queue_size();
  void clear_has_pending_queue_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  ::apollo::cyber::proto::QosProfile* qos_profile_;
  ::google::protobuf::uint32 pending_queue_size_;
  friend struct protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ComponentConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.ComponentConfig) */ {
 public:
  ComponentConfig();
  virtual ~ComponentConfig();

  ComponentConfig(const ComponentConfig& from);

  inline ComponentConfig& operator=(const ComponentConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentConfig& default_instance();

  static inline const ComponentConfig* internal_default_instance() {
    return reinterpret_cast<const ComponentConfig*>(
               &_ComponentConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ComponentConfig* other);

  // implements Message ----------------------------------------------

  inline ComponentConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ComponentConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ComponentConfig& from);
  void MergeFrom(const ComponentConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ComponentConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.cyber.proto.ReaderOption readers = 4;
  int readers_size() const;
  void clear_readers();
  static const int kReadersFieldNumber = 4;
  const ::apollo::cyber::proto::ReaderOption& readers(int index) const;
  ::apollo::cyber::proto::ReaderOption* mutable_readers(int index);
  ::apollo::cyber::proto::ReaderOption* add_readers();
  ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption >*
      mutable_readers();
  const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption >&
      readers() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string config_file_path = 2;
  bool has_config_file_path() const;
  void clear_config_file_path();
  static const int kConfigFilePathFieldNumber = 2;
  const ::std::string& config_file_path() const;
  void set_config_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_config_file_path(::std::string&& value);
  #endif
  void set_config_file_path(const char* value);
  void set_config_file_path(const char* value, size_t size);
  ::std::string* mutable_config_file_path();
  ::std::string* release_config_file_path();
  void set_allocated_config_file_path(::std::string* config_file_path);

  // optional string flag_file_path = 3;
  bool has_flag_file_path() const;
  void clear_flag_file_path();
  static const int kFlagFilePathFieldNumber = 3;
  const ::std::string& flag_file_path() const;
  void set_flag_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_flag_file_path(::std::string&& value);
  #endif
  void set_flag_file_path(const char* value);
  void set_flag_file_path(const char* value, size_t size);
  ::std::string* mutable_flag_file_path();
  ::std::string* release_flag_file_path();
  void set_allocated_flag_file_path(::std::string* flag_file_path);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.ComponentConfig)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_config_file_path();
  void clear_has_config_file_path();
  void set_has_flag_file_path();
  void clear_has_flag_file_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption > readers_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr config_file_path_;
  ::google::protobuf::internal::ArenaStringPtr flag_file_path_;
  friend struct protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TimerComponentConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.cyber.proto.TimerComponentConfig) */ {
 public:
  TimerComponentConfig();
  virtual ~TimerComponentConfig();

  TimerComponentConfig(const TimerComponentConfig& from);

  inline TimerComponentConfig& operator=(const TimerComponentConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimerComponentConfig& default_instance();

  static inline const TimerComponentConfig* internal_default_instance() {
    return reinterpret_cast<const TimerComponentConfig*>(
               &_TimerComponentConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TimerComponentConfig* other);

  // implements Message ----------------------------------------------

  inline TimerComponentConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TimerComponentConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimerComponentConfig& from);
  void MergeFrom(const TimerComponentConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimerComponentConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string config_file_path = 2;
  bool has_config_file_path() const;
  void clear_config_file_path();
  static const int kConfigFilePathFieldNumber = 2;
  const ::std::string& config_file_path() const;
  void set_config_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_config_file_path(::std::string&& value);
  #endif
  void set_config_file_path(const char* value);
  void set_config_file_path(const char* value, size_t size);
  ::std::string* mutable_config_file_path();
  ::std::string* release_config_file_path();
  void set_allocated_config_file_path(::std::string* config_file_path);

  // optional string flag_file_path = 3;
  bool has_flag_file_path() const;
  void clear_flag_file_path();
  static const int kFlagFilePathFieldNumber = 3;
  const ::std::string& flag_file_path() const;
  void set_flag_file_path(const ::std::string& value);
  #if LANG_CXX11
  void set_flag_file_path(::std::string&& value);
  #endif
  void set_flag_file_path(const char* value);
  void set_flag_file_path(const char* value, size_t size);
  ::std::string* mutable_flag_file_path();
  ::std::string* release_flag_file_path();
  void set_allocated_flag_file_path(::std::string* flag_file_path);

  // optional uint32 interval = 4;
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 4;
  ::google::protobuf::uint32 interval() const;
  void set_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:apollo.cyber.proto.TimerComponentConfig)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_config_file_path();
  void clear_has_config_file_path();
  void set_has_flag_file_path();
  void clear_has_flag_file_path();
  void set_has_interval();
  void clear_has_interval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr config_file_path_;
  ::google::protobuf::internal::ArenaStringPtr flag_file_path_;
  ::google::protobuf::uint32 interval_;
  friend struct protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReaderOption

// optional string channel = 1;
inline bool ReaderOption::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReaderOption::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReaderOption::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReaderOption::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
inline const ::std::string& ReaderOption::channel() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ReaderOption.channel)
  return channel_.GetNoArena();
}
inline void ReaderOption::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ReaderOption.channel)
}
#if LANG_CXX11
inline void ReaderOption::set_channel(::std::string&& value) {
  set_has_channel();
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ReaderOption.channel)
}
#endif
inline void ReaderOption::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ReaderOption.channel)
}
inline void ReaderOption::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ReaderOption.channel)
}
inline ::std::string* ReaderOption::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ReaderOption.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReaderOption::release_channel() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ReaderOption.channel)
  clear_has_channel();
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReaderOption::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ReaderOption.channel)
}

// optional .apollo.cyber.proto.QosProfile qos_profile = 2;
inline bool ReaderOption::has_qos_profile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReaderOption::set_has_qos_profile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReaderOption::clear_has_qos_profile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReaderOption::clear_qos_profile() {
  if (qos_profile_ != NULL) qos_profile_->::apollo::cyber::proto::QosProfile::Clear();
  clear_has_qos_profile();
}
inline const ::apollo::cyber::proto::QosProfile& ReaderOption::qos_profile() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ReaderOption.qos_profile)
  return qos_profile_ != NULL ? *qos_profile_
                         : *::apollo::cyber::proto::QosProfile::internal_default_instance();
}
inline ::apollo::cyber::proto::QosProfile* ReaderOption::mutable_qos_profile() {
  set_has_qos_profile();
  if (qos_profile_ == NULL) {
    qos_profile_ = new ::apollo::cyber::proto::QosProfile;
  }
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ReaderOption.qos_profile)
  return qos_profile_;
}
inline ::apollo::cyber::proto::QosProfile* ReaderOption::release_qos_profile() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ReaderOption.qos_profile)
  clear_has_qos_profile();
  ::apollo::cyber::proto::QosProfile* temp = qos_profile_;
  qos_profile_ = NULL;
  return temp;
}
inline void ReaderOption::set_allocated_qos_profile(::apollo::cyber::proto::QosProfile* qos_profile) {
  delete qos_profile_;
  qos_profile_ = qos_profile;
  if (qos_profile) {
    set_has_qos_profile();
  } else {
    clear_has_qos_profile();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ReaderOption.qos_profile)
}

// optional uint32 pending_queue_size = 3 [default = 1];
inline bool ReaderOption::has_pending_queue_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReaderOption::set_has_pending_queue_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReaderOption::clear_has_pending_queue_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReaderOption::clear_pending_queue_size() {
  pending_queue_size_ = 1u;
  clear_has_pending_queue_size();
}
inline ::google::protobuf::uint32 ReaderOption::pending_queue_size() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ReaderOption.pending_queue_size)
  return pending_queue_size_;
}
inline void ReaderOption::set_pending_queue_size(::google::protobuf::uint32 value) {
  set_has_pending_queue_size();
  pending_queue_size_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ReaderOption.pending_queue_size)
}

// -------------------------------------------------------------------

// ComponentConfig

// optional string name = 1;
inline bool ComponentConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ComponentConfig::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.name)
  return name_.GetNoArena();
}
inline void ComponentConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentConfig.name)
}
#if LANG_CXX11
inline void ComponentConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentConfig.name)
}
#endif
inline void ComponentConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentConfig.name)
}
inline void ComponentConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentConfig.name)
}
inline ::std::string* ComponentConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComponentConfig::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentConfig.name)
}

// optional string config_file_path = 2;
inline bool ComponentConfig::has_config_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentConfig::set_has_config_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentConfig::clear_has_config_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentConfig::clear_config_file_path() {
  config_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config_file_path();
}
inline const ::std::string& ComponentConfig::config_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.config_file_path)
  return config_file_path_.GetNoArena();
}
inline void ComponentConfig::set_config_file_path(const ::std::string& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentConfig.config_file_path)
}
#if LANG_CXX11
inline void ComponentConfig::set_config_file_path(::std::string&& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentConfig.config_file_path)
}
#endif
inline void ComponentConfig::set_config_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentConfig.config_file_path)
}
inline void ComponentConfig::set_config_file_path(const char* value, size_t size) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentConfig.config_file_path)
}
inline ::std::string* ComponentConfig::mutable_config_file_path() {
  set_has_config_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.config_file_path)
  return config_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComponentConfig::release_config_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentConfig.config_file_path)
  clear_has_config_file_path();
  return config_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentConfig::set_allocated_config_file_path(::std::string* config_file_path) {
  if (config_file_path != NULL) {
    set_has_config_file_path();
  } else {
    clear_has_config_file_path();
  }
  config_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentConfig.config_file_path)
}

// optional string flag_file_path = 3;
inline bool ComponentConfig::has_flag_file_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ComponentConfig::set_has_flag_file_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ComponentConfig::clear_has_flag_file_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ComponentConfig::clear_flag_file_path() {
  flag_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flag_file_path();
}
inline const ::std::string& ComponentConfig::flag_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.flag_file_path)
  return flag_file_path_.GetNoArena();
}
inline void ComponentConfig::set_flag_file_path(const ::std::string& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
#if LANG_CXX11
inline void ComponentConfig::set_flag_file_path(::std::string&& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
#endif
inline void ComponentConfig::set_flag_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
inline void ComponentConfig::set_flag_file_path(const char* value, size_t size) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
inline ::std::string* ComponentConfig::mutable_flag_file_path() {
  set_has_flag_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.flag_file_path)
  return flag_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ComponentConfig::release_flag_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentConfig.flag_file_path)
  clear_has_flag_file_path();
  return flag_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ComponentConfig::set_allocated_flag_file_path(::std::string* flag_file_path) {
  if (flag_file_path != NULL) {
    set_has_flag_file_path();
  } else {
    clear_has_flag_file_path();
  }
  flag_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flag_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentConfig.flag_file_path)
}

// repeated .apollo.cyber.proto.ReaderOption readers = 4;
inline int ComponentConfig::readers_size() const {
  return readers_.size();
}
inline void ComponentConfig::clear_readers() {
  readers_.Clear();
}
inline const ::apollo::cyber::proto::ReaderOption& ComponentConfig::readers(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.readers)
  return readers_.Get(index);
}
inline ::apollo::cyber::proto::ReaderOption* ComponentConfig::mutable_readers(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.readers)
  return readers_.Mutable(index);
}
inline ::apollo::cyber::proto::ReaderOption* ComponentConfig::add_readers() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.ComponentConfig.readers)
  return readers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption >*
ComponentConfig::mutable_readers() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.ComponentConfig.readers)
  return &readers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption >&
ComponentConfig::readers() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.ComponentConfig.readers)
  return readers_;
}

// -------------------------------------------------------------------

// TimerComponentConfig

// optional string name = 1;
inline bool TimerComponentConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TimerComponentConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TimerComponentConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TimerComponentConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TimerComponentConfig::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.name)
  return name_.GetNoArena();
}
inline void TimerComponentConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.name)
}
#if LANG_CXX11
inline void TimerComponentConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentConfig.name)
}
#endif
inline void TimerComponentConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentConfig.name)
}
inline void TimerComponentConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentConfig.name)
}
inline ::std::string* TimerComponentConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimerComponentConfig::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimerComponentConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentConfig.name)
}

// optional string config_file_path = 2;
inline bool TimerComponentConfig::has_config_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TimerComponentConfig::set_has_config_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TimerComponentConfig::clear_has_config_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TimerComponentConfig::clear_config_file_path() {
  config_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config_file_path();
}
inline const ::std::string& TimerComponentConfig::config_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.config_file_path)
  return config_file_path_.GetNoArena();
}
inline void TimerComponentConfig::set_config_file_path(const ::std::string& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
#if LANG_CXX11
inline void TimerComponentConfig::set_config_file_path(::std::string&& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
#endif
inline void TimerComponentConfig::set_config_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
inline void TimerComponentConfig::set_config_file_path(const char* value, size_t size) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
inline ::std::string* TimerComponentConfig::mutable_config_file_path() {
  set_has_config_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentConfig.config_file_path)
  return config_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimerComponentConfig::release_config_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentConfig.config_file_path)
  clear_has_config_file_path();
  return config_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimerComponentConfig::set_allocated_config_file_path(::std::string* config_file_path) {
  if (config_file_path != NULL) {
    set_has_config_file_path();
  } else {
    clear_has_config_file_path();
  }
  config_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}

// optional string flag_file_path = 3;
inline bool TimerComponentConfig::has_flag_file_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TimerComponentConfig::set_has_flag_file_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TimerComponentConfig::clear_has_flag_file_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TimerComponentConfig::clear_flag_file_path() {
  flag_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flag_file_path();
}
inline const ::std::string& TimerComponentConfig::flag_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
  return flag_file_path_.GetNoArena();
}
inline void TimerComponentConfig::set_flag_file_path(const ::std::string& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
#if LANG_CXX11
inline void TimerComponentConfig::set_flag_file_path(::std::string&& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
#endif
inline void TimerComponentConfig::set_flag_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
inline void TimerComponentConfig::set_flag_file_path(const char* value, size_t size) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
inline ::std::string* TimerComponentConfig::mutable_flag_file_path() {
  set_has_flag_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
  return flag_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TimerComponentConfig::release_flag_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
  clear_has_flag_file_path();
  return flag_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TimerComponentConfig::set_allocated_flag_file_path(::std::string* flag_file_path) {
  if (flag_file_path != NULL) {
    set_has_flag_file_path();
  } else {
    clear_has_flag_file_path();
  }
  flag_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flag_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}

// optional uint32 interval = 4;
inline bool TimerComponentConfig::has_interval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TimerComponentConfig::set_has_interval() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TimerComponentConfig::clear_has_interval() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TimerComponentConfig::clear_interval() {
  interval_ = 0u;
  clear_has_interval();
}
inline ::google::protobuf::uint32 TimerComponentConfig::interval() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.interval)
  return interval_;
}
inline void TimerComponentConfig::set_interval(::google::protobuf::uint32 value) {
  set_has_interval();
  interval_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.interval)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cyber_2fproto_2fcomponent_5fconf_2eproto__INCLUDED
