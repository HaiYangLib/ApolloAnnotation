// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cyber/proto/component_conf.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cyber/proto/component_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace cyber {
namespace proto {
class ReaderOptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReaderOption> {
} _ReaderOption_default_instance_;
class ComponentConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ComponentConfig> {
} _ComponentConfig_default_instance_;
class TimerComponentConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TimerComponentConfig> {
} _TimerComponentConfig_default_instance_;

namespace protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReaderOption, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReaderOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReaderOption, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReaderOption, qos_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReaderOption, pending_queue_size_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, config_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, flag_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentConfig, readers_),
  0,
  1,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimerComponentConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimerComponentConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimerComponentConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimerComponentConfig, config_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimerComponentConfig, flag_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TimerComponentConfig, interval_),
  0,
  1,
  2,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(ReaderOption)},
  { 11, 20, sizeof(ComponentConfig)},
  { 24, 33, sizeof(TimerComponentConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReaderOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ComponentConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TimerComponentConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cyber/proto/component_conf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _ReaderOption_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ComponentConfig_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TimerComponentConfig_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::apollo::cyber::proto::protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::InitDefaults();
  _ReaderOption_default_instance_.DefaultConstruct();
  _ComponentConfig_default_instance_.DefaultConstruct();
  _TimerComponentConfig_default_instance_.DefaultConstruct();
  _ReaderOption_default_instance_.get_mutable()->qos_profile_ = const_cast< ::apollo::cyber::proto::QosProfile*>(
      ::apollo::cyber::proto::QosProfile::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n cyber/proto/component_conf.proto\022\022apol"
      "lo.cyber.proto\032\035cyber/proto/qos_profile."
      "proto\"s\n\014ReaderOption\022\017\n\007channel\030\001 \001(\t\0223"
      "\n\013qos_profile\030\002 \001(\0132\036.apollo.cyber.proto"
      ".QosProfile\022\035\n\022pending_queue_size\030\003 \001(\r:"
      "\0011\"\204\001\n\017ComponentConfig\022\014\n\004name\030\001 \001(\t\022\030\n\020"
      "config_file_path\030\002 \001(\t\022\026\n\016flag_file_path"
      "\030\003 \001(\t\0221\n\007readers\030\004 \003(\0132 .apollo.cyber.p"
      "roto.ReaderOption\"h\n\024TimerComponentConfi"
      "g\022\014\n\004name\030\001 \001(\t\022\030\n\020config_file_path\030\002 \001("
      "\t\022\026\n\016flag_file_path\030\003 \001(\t\022\020\n\010interval\030\004 "
      "\001(\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 443);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cyber/proto/component_conf.proto", &protobuf_RegisterTypes);
  ::apollo::cyber::proto::protobuf_cyber_2fproto_2fqos_5fprofile_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReaderOption::kChannelFieldNumber;
const int ReaderOption::kQosProfileFieldNumber;
const int ReaderOption::kPendingQueueSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReaderOption::ReaderOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ReaderOption)
}
ReaderOption::ReaderOption(const ReaderOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_channel()) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  if (from.has_qos_profile()) {
    qos_profile_ = new ::apollo::cyber::proto::QosProfile(*from.qos_profile_);
  } else {
    qos_profile_ = NULL;
  }
  pending_queue_size_ = from.pending_queue_size_;
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ReaderOption)
}

void ReaderOption::SharedCtor() {
  _cached_size_ = 0;
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qos_profile_ = NULL;
  pending_queue_size_ = 1u;
}

ReaderOption::~ReaderOption() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ReaderOption)
  SharedDtor();
}

void ReaderOption::SharedDtor() {
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete qos_profile_;
  }
}

void ReaderOption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReaderOption::descriptor() {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReaderOption& ReaderOption::default_instance() {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReaderOption* ReaderOption::New(::google::protobuf::Arena* arena) const {
  ReaderOption* n = new ReaderOption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReaderOption::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ReaderOption)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_channel()) {
      GOOGLE_DCHECK(!channel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*channel_.UnsafeRawStringPointer())->clear();
    }
    if (has_qos_profile()) {
      GOOGLE_DCHECK(qos_profile_ != NULL);
      qos_profile_->::apollo::cyber::proto::QosProfile::Clear();
    }
    pending_queue_size_ = 1u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReaderOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ReaderOption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ReaderOption.channel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .apollo.cyber.proto.QosProfile qos_profile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_qos_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pending_queue_size = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_pending_queue_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pending_queue_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ReaderOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ReaderOption)
  return false;
#undef DO_
}

void ReaderOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ReaderOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string channel = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ReaderOption.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel(), output);
  }

  // optional .apollo.cyber.proto.QosProfile qos_profile = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->qos_profile_, output);
  }

  // optional uint32 pending_queue_size = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pending_queue_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ReaderOption)
}

::google::protobuf::uint8* ReaderOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ReaderOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string channel = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ReaderOption.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel(), target);
  }

  // optional .apollo.cyber.proto.QosProfile qos_profile = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->qos_profile_, deterministic, target);
  }

  // optional uint32 pending_queue_size = 3 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pending_queue_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ReaderOption)
  return target;
}

size_t ReaderOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ReaderOption)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string channel = 1;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }

    // optional .apollo.cyber.proto.QosProfile qos_profile = 2;
    if (has_qos_profile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->qos_profile_);
    }

    // optional uint32 pending_queue_size = 3 [default = 1];
    if (has_pending_queue_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pending_queue_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReaderOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ReaderOption)
  GOOGLE_DCHECK_NE(&from, this);
  const ReaderOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReaderOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ReaderOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ReaderOption)
    MergeFrom(*source);
  }
}

void ReaderOption::MergeFrom(const ReaderOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ReaderOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_channel();
      channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_qos_profile()->::apollo::cyber::proto::QosProfile::MergeFrom(from.qos_profile());
    }
    if (cached_has_bits & 0x00000004u) {
      pending_queue_size_ = from.pending_queue_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ReaderOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ReaderOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReaderOption::CopyFrom(const ReaderOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ReaderOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReaderOption::IsInitialized() const {
  return true;
}

void ReaderOption::Swap(ReaderOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReaderOption::InternalSwap(ReaderOption* other) {
  channel_.Swap(&other->channel_);
  std::swap(qos_profile_, other->qos_profile_);
  std::swap(pending_queue_size_, other->pending_queue_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReaderOption::GetMetadata() const {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReaderOption

// optional string channel = 1;
bool ReaderOption::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReaderOption::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
void ReaderOption::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReaderOption::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_channel();
}
const ::std::string& ReaderOption::channel() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ReaderOption.channel)
  return channel_.GetNoArena();
}
void ReaderOption::set_channel(const ::std::string& value) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ReaderOption.channel)
}
#if LANG_CXX11
void ReaderOption::set_channel(::std::string&& value) {
  set_has_channel();
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ReaderOption.channel)
}
#endif
void ReaderOption::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ReaderOption.channel)
}
void ReaderOption::set_channel(const char* value, size_t size) {
  set_has_channel();
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ReaderOption.channel)
}
::std::string* ReaderOption::mutable_channel() {
  set_has_channel();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ReaderOption.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReaderOption::release_channel() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ReaderOption.channel)
  clear_has_channel();
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReaderOption::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    set_has_channel();
  } else {
    clear_has_channel();
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ReaderOption.channel)
}

// optional .apollo.cyber.proto.QosProfile qos_profile = 2;
bool ReaderOption::has_qos_profile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReaderOption::set_has_qos_profile() {
  _has_bits_[0] |= 0x00000002u;
}
void ReaderOption::clear_has_qos_profile() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReaderOption::clear_qos_profile() {
  if (qos_profile_ != NULL) qos_profile_->::apollo::cyber::proto::QosProfile::Clear();
  clear_has_qos_profile();
}
const ::apollo::cyber::proto::QosProfile& ReaderOption::qos_profile() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ReaderOption.qos_profile)
  return qos_profile_ != NULL ? *qos_profile_
                         : *::apollo::cyber::proto::QosProfile::internal_default_instance();
}
::apollo::cyber::proto::QosProfile* ReaderOption::mutable_qos_profile() {
  set_has_qos_profile();
  if (qos_profile_ == NULL) {
    qos_profile_ = new ::apollo::cyber::proto::QosProfile;
  }
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ReaderOption.qos_profile)
  return qos_profile_;
}
::apollo::cyber::proto::QosProfile* ReaderOption::release_qos_profile() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ReaderOption.qos_profile)
  clear_has_qos_profile();
  ::apollo::cyber::proto::QosProfile* temp = qos_profile_;
  qos_profile_ = NULL;
  return temp;
}
void ReaderOption::set_allocated_qos_profile(::apollo::cyber::proto::QosProfile* qos_profile) {
  delete qos_profile_;
  qos_profile_ = qos_profile;
  if (qos_profile) {
    set_has_qos_profile();
  } else {
    clear_has_qos_profile();
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ReaderOption.qos_profile)
}

// optional uint32 pending_queue_size = 3 [default = 1];
bool ReaderOption::has_pending_queue_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReaderOption::set_has_pending_queue_size() {
  _has_bits_[0] |= 0x00000004u;
}
void ReaderOption::clear_has_pending_queue_size() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReaderOption::clear_pending_queue_size() {
  pending_queue_size_ = 1u;
  clear_has_pending_queue_size();
}
::google::protobuf::uint32 ReaderOption::pending_queue_size() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ReaderOption.pending_queue_size)
  return pending_queue_size_;
}
void ReaderOption::set_pending_queue_size(::google::protobuf::uint32 value) {
  set_has_pending_queue_size();
  pending_queue_size_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ReaderOption.pending_queue_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComponentConfig::kNameFieldNumber;
const int ComponentConfig::kConfigFilePathFieldNumber;
const int ComponentConfig::kFlagFilePathFieldNumber;
const int ComponentConfig::kReadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComponentConfig::ComponentConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.ComponentConfig)
}
ComponentConfig::ComponentConfig(const ComponentConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      readers_(from.readers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  config_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_config_file_path()) {
    config_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_file_path_);
  }
  flag_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_flag_file_path()) {
    flag_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flag_file_path_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.ComponentConfig)
}

void ComponentConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ComponentConfig::~ComponentConfig() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.ComponentConfig)
  SharedDtor();
}

void ComponentConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ComponentConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentConfig::descriptor() {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ComponentConfig& ComponentConfig::default_instance() {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

ComponentConfig* ComponentConfig::New(::google::protobuf::Arena* arena) const {
  ComponentConfig* n = new ComponentConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComponentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.ComponentConfig)
  readers_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_config_file_path()) {
      GOOGLE_DCHECK(!config_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*config_file_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_flag_file_path()) {
      GOOGLE_DCHECK(!flag_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*flag_file_path_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ComponentConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.ComponentConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ComponentConfig.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string config_file_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->config_file_path().data(), this->config_file_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ComponentConfig.config_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string flag_file_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flag_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->flag_file_path().data(), this->flag_file_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.ComponentConfig.flag_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.cyber.proto.ReaderOption readers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_readers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.ComponentConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.ComponentConfig)
  return false;
#undef DO_
}

void ComponentConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.ComponentConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string config_file_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->config_file_path().data(), this->config_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentConfig.config_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->config_file_path(), output);
  }

  // optional string flag_file_path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flag_file_path().data(), this->flag_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentConfig.flag_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->flag_file_path(), output);
  }

  // repeated .apollo.cyber.proto.ReaderOption readers = 4;
  for (unsigned int i = 0, n = this->readers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->readers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.ComponentConfig)
}

::google::protobuf::uint8* ComponentConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.ComponentConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string config_file_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->config_file_path().data(), this->config_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentConfig.config_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->config_file_path(), target);
  }

  // optional string flag_file_path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flag_file_path().data(), this->flag_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.ComponentConfig.flag_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->flag_file_path(), target);
  }

  // repeated .apollo.cyber.proto.ReaderOption readers = 4;
  for (unsigned int i = 0, n = this->readers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->readers(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.ComponentConfig)
  return target;
}

size_t ComponentConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.ComponentConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.cyber.proto.ReaderOption readers = 4;
  {
    unsigned int count = this->readers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->readers(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string config_file_path = 2;
    if (has_config_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->config_file_path());
    }

    // optional string flag_file_path = 3;
    if (has_flag_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->flag_file_path());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.ComponentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ComponentConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComponentConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.ComponentConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.ComponentConfig)
    MergeFrom(*source);
  }
}

void ComponentConfig::MergeFrom(const ComponentConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.ComponentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  readers_.MergeFrom(from.readers_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_config_file_path();
      config_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_file_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_flag_file_path();
      flag_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flag_file_path_);
    }
  }
}

void ComponentConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.ComponentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentConfig::CopyFrom(const ComponentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.ComponentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComponentConfig::IsInitialized() const {
  return true;
}

void ComponentConfig::Swap(ComponentConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComponentConfig::InternalSwap(ComponentConfig* other) {
  readers_.InternalSwap(&other->readers_);
  name_.Swap(&other->name_);
  config_file_path_.Swap(&other->config_file_path_);
  flag_file_path_.Swap(&other->flag_file_path_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComponentConfig::GetMetadata() const {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComponentConfig

// optional string name = 1;
bool ComponentConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ComponentConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ComponentConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ComponentConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ComponentConfig::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.name)
  return name_.GetNoArena();
}
void ComponentConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentConfig.name)
}
#if LANG_CXX11
void ComponentConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentConfig.name)
}
#endif
void ComponentConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentConfig.name)
}
void ComponentConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentConfig.name)
}
::std::string* ComponentConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComponentConfig::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComponentConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentConfig.name)
}

// optional string config_file_path = 2;
bool ComponentConfig::has_config_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ComponentConfig::set_has_config_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
void ComponentConfig::clear_has_config_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void ComponentConfig::clear_config_file_path() {
  config_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config_file_path();
}
const ::std::string& ComponentConfig::config_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.config_file_path)
  return config_file_path_.GetNoArena();
}
void ComponentConfig::set_config_file_path(const ::std::string& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentConfig.config_file_path)
}
#if LANG_CXX11
void ComponentConfig::set_config_file_path(::std::string&& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentConfig.config_file_path)
}
#endif
void ComponentConfig::set_config_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentConfig.config_file_path)
}
void ComponentConfig::set_config_file_path(const char* value, size_t size) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentConfig.config_file_path)
}
::std::string* ComponentConfig::mutable_config_file_path() {
  set_has_config_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.config_file_path)
  return config_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComponentConfig::release_config_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentConfig.config_file_path)
  clear_has_config_file_path();
  return config_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComponentConfig::set_allocated_config_file_path(::std::string* config_file_path) {
  if (config_file_path != NULL) {
    set_has_config_file_path();
  } else {
    clear_has_config_file_path();
  }
  config_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentConfig.config_file_path)
}

// optional string flag_file_path = 3;
bool ComponentConfig::has_flag_file_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ComponentConfig::set_has_flag_file_path() {
  _has_bits_[0] |= 0x00000004u;
}
void ComponentConfig::clear_has_flag_file_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void ComponentConfig::clear_flag_file_path() {
  flag_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flag_file_path();
}
const ::std::string& ComponentConfig::flag_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.flag_file_path)
  return flag_file_path_.GetNoArena();
}
void ComponentConfig::set_flag_file_path(const ::std::string& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
#if LANG_CXX11
void ComponentConfig::set_flag_file_path(::std::string&& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
#endif
void ComponentConfig::set_flag_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
void ComponentConfig::set_flag_file_path(const char* value, size_t size) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.ComponentConfig.flag_file_path)
}
::std::string* ComponentConfig::mutable_flag_file_path() {
  set_has_flag_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.flag_file_path)
  return flag_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ComponentConfig::release_flag_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.ComponentConfig.flag_file_path)
  clear_has_flag_file_path();
  return flag_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ComponentConfig::set_allocated_flag_file_path(::std::string* flag_file_path) {
  if (flag_file_path != NULL) {
    set_has_flag_file_path();
  } else {
    clear_has_flag_file_path();
  }
  flag_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flag_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.ComponentConfig.flag_file_path)
}

// repeated .apollo.cyber.proto.ReaderOption readers = 4;
int ComponentConfig::readers_size() const {
  return readers_.size();
}
void ComponentConfig::clear_readers() {
  readers_.Clear();
}
const ::apollo::cyber::proto::ReaderOption& ComponentConfig::readers(int index) const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.ComponentConfig.readers)
  return readers_.Get(index);
}
::apollo::cyber::proto::ReaderOption* ComponentConfig::mutable_readers(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.ComponentConfig.readers)
  return readers_.Mutable(index);
}
::apollo::cyber::proto::ReaderOption* ComponentConfig::add_readers() {
  // @@protoc_insertion_point(field_add:apollo.cyber.proto.ComponentConfig.readers)
  return readers_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption >*
ComponentConfig::mutable_readers() {
  // @@protoc_insertion_point(field_mutable_list:apollo.cyber.proto.ComponentConfig.readers)
  return &readers_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::cyber::proto::ReaderOption >&
ComponentConfig::readers() const {
  // @@protoc_insertion_point(field_list:apollo.cyber.proto.ComponentConfig.readers)
  return readers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TimerComponentConfig::kNameFieldNumber;
const int TimerComponentConfig::kConfigFilePathFieldNumber;
const int TimerComponentConfig::kFlagFilePathFieldNumber;
const int TimerComponentConfig::kIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimerComponentConfig::TimerComponentConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.cyber.proto.TimerComponentConfig)
}
TimerComponentConfig::TimerComponentConfig(const TimerComponentConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  config_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_config_file_path()) {
    config_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_file_path_);
  }
  flag_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_flag_file_path()) {
    flag_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flag_file_path_);
  }
  interval_ = from.interval_;
  // @@protoc_insertion_point(copy_constructor:apollo.cyber.proto.TimerComponentConfig)
}

void TimerComponentConfig::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interval_ = 0u;
}

TimerComponentConfig::~TimerComponentConfig() {
  // @@protoc_insertion_point(destructor:apollo.cyber.proto.TimerComponentConfig)
  SharedDtor();
}

void TimerComponentConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flag_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TimerComponentConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimerComponentConfig::descriptor() {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimerComponentConfig& TimerComponentConfig::default_instance() {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::InitDefaults();
  return *internal_default_instance();
}

TimerComponentConfig* TimerComponentConfig::New(::google::protobuf::Arena* arena) const {
  TimerComponentConfig* n = new TimerComponentConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TimerComponentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.cyber.proto.TimerComponentConfig)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_config_file_path()) {
      GOOGLE_DCHECK(!config_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*config_file_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_flag_file_path()) {
      GOOGLE_DCHECK(!flag_file_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*flag_file_path_.UnsafeRawStringPointer())->clear();
    }
  }
  interval_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TimerComponentConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.cyber.proto.TimerComponentConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.TimerComponentConfig.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string config_file_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->config_file_path().data(), this->config_file_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.TimerComponentConfig.config_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string flag_file_path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_flag_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->flag_file_path().data(), this->flag_file_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.cyber.proto.TimerComponentConfig.flag_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 interval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_interval();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.cyber.proto.TimerComponentConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.cyber.proto.TimerComponentConfig)
  return false;
#undef DO_
}

void TimerComponentConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.cyber.proto.TimerComponentConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string config_file_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->config_file_path().data(), this->config_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentConfig.config_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->config_file_path(), output);
  }

  // optional string flag_file_path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flag_file_path().data(), this->flag_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentConfig.flag_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->flag_file_path(), output);
  }

  // optional uint32 interval = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->interval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.cyber.proto.TimerComponentConfig)
}

::google::protobuf::uint8* TimerComponentConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.cyber.proto.TimerComponentConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string config_file_path = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->config_file_path().data(), this->config_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentConfig.config_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->config_file_path(), target);
  }

  // optional string flag_file_path = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->flag_file_path().data(), this->flag_file_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.cyber.proto.TimerComponentConfig.flag_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->flag_file_path(), target);
  }

  // optional uint32 interval = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->interval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.cyber.proto.TimerComponentConfig)
  return target;
}

size_t TimerComponentConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.cyber.proto.TimerComponentConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string config_file_path = 2;
    if (has_config_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->config_file_path());
    }

    // optional string flag_file_path = 3;
    if (has_flag_file_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->flag_file_path());
    }

    // optional uint32 interval = 4;
    if (has_interval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->interval());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimerComponentConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.cyber.proto.TimerComponentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const TimerComponentConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimerComponentConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.cyber.proto.TimerComponentConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.cyber.proto.TimerComponentConfig)
    MergeFrom(*source);
  }
}

void TimerComponentConfig::MergeFrom(const TimerComponentConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.cyber.proto.TimerComponentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_config_file_path();
      config_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_file_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_flag_file_path();
      flag_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.flag_file_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      interval_ = from.interval_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TimerComponentConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.cyber.proto.TimerComponentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimerComponentConfig::CopyFrom(const TimerComponentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.cyber.proto.TimerComponentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimerComponentConfig::IsInitialized() const {
  return true;
}

void TimerComponentConfig::Swap(TimerComponentConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimerComponentConfig::InternalSwap(TimerComponentConfig* other) {
  name_.Swap(&other->name_);
  config_file_path_.Swap(&other->config_file_path_);
  flag_file_path_.Swap(&other->flag_file_path_);
  std::swap(interval_, other->interval_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimerComponentConfig::GetMetadata() const {
  protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cyber_2fproto_2fcomponent_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TimerComponentConfig

// optional string name = 1;
bool TimerComponentConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TimerComponentConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void TimerComponentConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void TimerComponentConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TimerComponentConfig::name() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.name)
  return name_.GetNoArena();
}
void TimerComponentConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.name)
}
#if LANG_CXX11
void TimerComponentConfig::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentConfig.name)
}
#endif
void TimerComponentConfig::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentConfig.name)
}
void TimerComponentConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentConfig.name)
}
::std::string* TimerComponentConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TimerComponentConfig::release_name() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentConfig.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TimerComponentConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentConfig.name)
}

// optional string config_file_path = 2;
bool TimerComponentConfig::has_config_file_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TimerComponentConfig::set_has_config_file_path() {
  _has_bits_[0] |= 0x00000002u;
}
void TimerComponentConfig::clear_has_config_file_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void TimerComponentConfig::clear_config_file_path() {
  config_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_config_file_path();
}
const ::std::string& TimerComponentConfig::config_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.config_file_path)
  return config_file_path_.GetNoArena();
}
void TimerComponentConfig::set_config_file_path(const ::std::string& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
#if LANG_CXX11
void TimerComponentConfig::set_config_file_path(::std::string&& value) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
#endif
void TimerComponentConfig::set_config_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
void TimerComponentConfig::set_config_file_path(const char* value, size_t size) {
  set_has_config_file_path();
  config_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}
::std::string* TimerComponentConfig::mutable_config_file_path() {
  set_has_config_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentConfig.config_file_path)
  return config_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TimerComponentConfig::release_config_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentConfig.config_file_path)
  clear_has_config_file_path();
  return config_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TimerComponentConfig::set_allocated_config_file_path(::std::string* config_file_path) {
  if (config_file_path != NULL) {
    set_has_config_file_path();
  } else {
    clear_has_config_file_path();
  }
  config_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentConfig.config_file_path)
}

// optional string flag_file_path = 3;
bool TimerComponentConfig::has_flag_file_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TimerComponentConfig::set_has_flag_file_path() {
  _has_bits_[0] |= 0x00000004u;
}
void TimerComponentConfig::clear_has_flag_file_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void TimerComponentConfig::clear_flag_file_path() {
  flag_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_flag_file_path();
}
const ::std::string& TimerComponentConfig::flag_file_path() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
  return flag_file_path_.GetNoArena();
}
void TimerComponentConfig::set_flag_file_path(const ::std::string& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
#if LANG_CXX11
void TimerComponentConfig::set_flag_file_path(::std::string&& value) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
#endif
void TimerComponentConfig::set_flag_file_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
void TimerComponentConfig::set_flag_file_path(const char* value, size_t size) {
  set_has_flag_file_path();
  flag_file_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}
::std::string* TimerComponentConfig::mutable_flag_file_path() {
  set_has_flag_file_path();
  // @@protoc_insertion_point(field_mutable:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
  return flag_file_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TimerComponentConfig::release_flag_file_path() {
  // @@protoc_insertion_point(field_release:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
  clear_has_flag_file_path();
  return flag_file_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TimerComponentConfig::set_allocated_flag_file_path(::std::string* flag_file_path) {
  if (flag_file_path != NULL) {
    set_has_flag_file_path();
  } else {
    clear_has_flag_file_path();
  }
  flag_file_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), flag_file_path);
  // @@protoc_insertion_point(field_set_allocated:apollo.cyber.proto.TimerComponentConfig.flag_file_path)
}

// optional uint32 interval = 4;
bool TimerComponentConfig::has_interval() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TimerComponentConfig::set_has_interval() {
  _has_bits_[0] |= 0x00000008u;
}
void TimerComponentConfig::clear_has_interval() {
  _has_bits_[0] &= ~0x00000008u;
}
void TimerComponentConfig::clear_interval() {
  interval_ = 0u;
  clear_has_interval();
}
::google::protobuf::uint32 TimerComponentConfig::interval() const {
  // @@protoc_insertion_point(field_get:apollo.cyber.proto.TimerComponentConfig.interval)
  return interval_;
}
void TimerComponentConfig::set_interval(::google::protobuf::uint32 value) {
  set_has_interval();
  interval_ = value;
  // @@protoc_insertion_point(field_set:apollo.cyber.proto.TimerComponentConfig.interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace cyber
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
